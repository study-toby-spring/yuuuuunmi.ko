<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--의존성 주입하는 부분 -->
    <context:component-scan
            base-package="spring.basic">
        <!--controller만 빼고 가져오겠다 -->
        <context:exclude-filter
                type="annotation"
                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>
    <!--<context:property-placeholder location="/database.properties"/>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <!-- 프로퍼티 파일 경로 지정 -->
            <value>/database.properties</value>
        </property>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
    <tx:annotation-driven/>
    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <bean id="userService" class="spring.toby1.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>
    <bean id="testUserService" class="spring.toby1.test.UserServiceTest$TestUserService" parent="userService"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDao" class="spring.toby1.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>

        <property name="sqlService" ref="sqlService"/>
    </bean>
    <bean id="sqlService" class="spring.toby1.service.SimpleSqlService">
        <property name="sqlMap">
            <map>
                <entry key="userAdd" value="insert into users(id, name, password, level, login, recommend, email) values (?,?,?,?,?,?,?)"/>
                <entry key="userGet" value="select * from users where id = ? "/>
                <entry key="userGetAll" value="select * from users order by id"/>
                <entry key="userDeleteAll" value="delete from users"/>
                <entry key="userGetCount" value="select count(*) from users"/>
                <entry key="userUpdate" value="update users set name = ?, password = ?, level = ?, login = ?, recommend = ?, email = ? where id = ?"/>
            </map>
        </property>
    </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="mailSender" class="spring.toby1.service.DummyMailSender">
        <!--<property name="host" value="${mail.smtp.host}"/>-->
    </bean>
    <bean id="idGenerator" class="java.util.Random"/>
    <bean id="helloFactory" class="spring.basic.util.HelloFactory">
        <property name="random" ref="idGenerator"></property>
    </bean>


</beans>